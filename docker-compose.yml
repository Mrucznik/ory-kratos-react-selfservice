version: '3.7'

services:
  react-app:
    container_name: react-app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
    - '.:/app'
    - '/app/node_modules'
    ports:
    - '3001:3000'
    environment:
      - NODE_ENV=development
    networks:
      - intranet

  kratos-migrate:
    image: oryd/kratos:latest-sqlite
    environment:
      - DSN=sqlite:///home/ory/sqlite/db.sqlite?_fk=true
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /home/ory/sqlite
        read_only: false
      - type: bind
        source: ./config/kratos
        target: /etc/config/kratos

    command:
      -c /etc/config/kratos/.kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet

  oathkeeper:
    image: oryd/oathkeeper:v0.35.5-beta.1
    depends_on:
      - kratos
    ports:
      - "4455:4455"
      - "4456:4456"
    command:
      serve proxy -c "/etc/config/oathkeeper/.oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
    restart: on-failure
    networks:
      - intranet
    volumes:
      -
        type: bind
        source: ./config/oathkeeper
        target: /etc/config/oathkeeper

  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:latest-sqlite
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      - DSN=sqlite:///home/ory/sqlite/db.sqlite?_fk=true
    command:
      serve -c /etc/config/kratos/.kratos.yml --dev
    volumes:
      -
        type: volume
        source: kratos-sqlite
        target: /home/ory/sqlite
        read_only: false
      -
        type: bind
        source: ./config/kratos
        target: /etc/config/kratos
    networks:
      - intranet

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:4436"
    networks:
      - intranet

networks:
  intranet:

volumes:
  kratos-sqlite:
